name: CI

on:
  push:
  pull_request:

permissions:
  checks: write
  id-token: write # needed for npm publish with provenance
  contents: write # needed for github release
  pull-requests: write # needed for coverage comment


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup and Install
        id: install
        uses: zirkelc/setup-and-install@v1

      - name: Lint
        run: pnpm lint

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Setup and Install
        id: install
        uses: zirkelc/setup-and-install@v1
        with:
          node-version: 20

      # https://docs.localstack.cloud/user-guide/ci/github-actions/
      - name: Start LocalStack
        run: |
          pip install localstack awscli-local[ver1] # install LocalStack cli and awslocal
          docker pull localstack/localstack         # Make sure to pull the latest version of the image
          localstack start -d                       # Start LocalStack in the background

          echo "Waiting for LocalStack startup..."  # Wait 30 seconds for the LocalStack container
          localstack wait -t 30                     # to become ready before timing out
          echo "Startup complete"

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, test, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Setup and Install
        id: install
        uses: zirkelc/setup-and-install@v1

      - name: Build
        run: pnpm build

      - name: Publish to NPM
        id: publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          dry-run: false
          provenance: true

      - name: Post publish
        if: steps.publish.outputs.type != ''
        run: |
          echo "Published ${{ steps.publish.outputs.type }} version: ${{ steps.publish.outputs.version }}"

      - name: Publish skipped
        if: steps.publish.outputs.type == ''
        run: |
          echo "Version in package.json has not changed. Skipping."
          exit 0

      - name: Create Release
        if: steps.publish.outputs.type != ''
        id: release
        uses: ncipollo/release-action@v1 # https://github.com/ncipollo/release-action
        with:
          allowUpdates: true
          generateReleaseNotes: true
          commit: ${{ github.sha }}
          draft: false
          name: v${{ steps.publish.outputs.version }}
          tag: v${{ steps.publish.outputs.version }}
